priorities
	[X] use fennel with lua
		[X] figure out how to define a library properly
		[X] Makefile and workflow to use libraries
	[X] use luaunit for tests
		: luaunit installed via apt
		[X] copy the sample test
			: luaunit test works
		[X] Makefile set up to run tests
	[X] connect to csound via c api
		[X] set up ffi basics
		[X] use the ffi library to load csound
		[X] run csound via ffi
	[X] abstractions for a cleaner interface to csound for this task
		[X] use ffi directly instead of via ipc
		[X] create a csound object with all api functions taking an instance as methods
		[X] use the csound api to stop printing to stdout
	[X] interactive control of a real time csound process via channels / table data
		[X] use channels to make k variables
		[X] use table methods to create / manipulate buffered data
	[X] namespace that creates a small composition, based on the current csound test
	[_] tcp communication / ipc via cqueues
		[X] rewrite ipc.lua entirely
		[_] test coverage for tcp code in ipc.lua
			[X] server abstraction via cqueues, with test coverage
			[_] thread sbstraction via cqueues, with test coverage
		[_] decent abstraction to use sockets via coroutines
			[_] high level design
				[_] a trampoline that needs a driver, in a coroutine
				[_] define the trampoline hops
					: ensure coroutine logic is testable, separate from network usage
					[_] accept hop
					[_] send hop
					[_] receive hop
					[_] exit hop
			[_] a driver for all the hops
		[_] set up threads / fork
		[_] figure out how to do message or stream encoding on the sockets
	[_] contribute back to the community
		[_] docs
			[_] add doc for multiple value bind to the reference (currently as if it were a feature of let)
		[_] the talk

deps used:
	cqueues
	fennel version - commit 77fdc81d5ee6fbdeba610ce8304026eef249ca42 (macros / quote / unquote implemented)
	previous fennel version - commit 9af9906cadc997f071bfd1201be963e49f5010d4
	luaffi
	libcsound64
	luaunit

possibilities
	a command line and result database middleware
		: store the string of the input, plus some representation of the
		: result in a db (?) - middleware for readline or nrepl

defunct / obsolete / speculative
	use lunitx to set up tests
		: lunit installed
		: https://github.com/bakpakin/Fennel/blob/master/test.lua#L213
	attach fennel to csound, or csound to fennel
		lua 5.1 can't use the ffi module, so it's going to be csound inside lua
		create a lua program that loads up csound, initializes the API, etc.
			: do this in pure lua or jump into fennel?
			: jump into fennel!
	attempted reinstalling so that csound would use lua5.2, gave up
		[X] do process based parallelism with *nix specific IPC via tcp sockets
		[X] figure out how to open and use tcp sockets
		[X] evaluate replacing my system with the cqueues lib
			: yes
