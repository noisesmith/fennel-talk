priorities
	[X] use fennel with lua
		[X] figure out how to define a library properly
		[X] Makefile and workflow to use libraries
	[X] use luaunit for tests
		: luaunit installed via apt
		[X] copy the sample test
			: luaunit test works
		[X] Makefile set up to run tests
	[X] connect to csound via c api
		[X] set up ffi basics
		[X] use the ffi library to load csound
		[X] run csound via ffi
	[X] abstractions for a cleaner interface to csound for this task
		[X] use ffi directly instead of via ipc
		[X] create a csound object with all api functions taking an instance as methods
	[_] do process based parallelism with *nix specific IPC via tcp sockets
		[X] figure out how to open and use tcp sockets
		[_] evaluate replacing my system with the cqueues lib
		[_] test coverage for tcp code in ipc.lua
		[_] decent abstraction to use sockets via coroutines
			[_] high level design - a trampoline that needs a driver
			[_] refactor of the hops so the coroutine logic is testable separate from network usage
			[_] refactor hops and driver function to separate trampolining from coroutines
			[_] rework to use the cqueue structures
			[_] all the trampoline hops
				[_] accept hop
				[_] send hop
				[_] receive hop
				[_] exit hop
			[_] a driver for all the hops
		[_] figure out how to do OS system interaction
		[_] figure out how to do message or stream encoding on the sockets
			[_] check out the native lua serdes provided
	[_] interactive control of a real time csound process via channels / table data
		[_] use channels to make k variables
		[_] use table methods to create / manipulate buffered data
	[_] contribute back to the community
		[_] the talk
		[_] docs
			[_] add doc for multiple value bind to the reference (currently as if it were a feature of let)

deps used:
	fennel version - commit 9af9906cadc997f071bfd1201be963e49f5010d4
	ffi
	libcsound64
	luasocket
	lume

artistic thoughts
	all art is conceptual, mainstream art leverages the concept of "talent"
		this project will use systems design to partially fill the talent niche
	use the constraints of the underlying structure / limitations to drive artistic decisions

possibilities
	a command line and result database middleware
		: store the string of the input, plus some representation of the
		: result in a db (?) - middleware for readline or nrepl

defunct / obsolete / speculative
	use lunitx to set up tests
		: lunit installed
		: https://github.com/bakpakin/Fennel/blob/master/test.lua#L213
	attach fennel to csound, or csound to fennel
		lua 5.1 can't use the ffi module, so it's going to be csound inside lua
		create a lua program that loads up csound, initializes the API, etc.
			: do this in pure lua or jump into fennel?
			jump into fennel!
		attempted reinstalling so that csound would use lua5.2, gave up
